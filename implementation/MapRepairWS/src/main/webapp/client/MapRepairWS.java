
package client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MapRepairWS", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MapRepairWS {


    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getResultVisChase", targetNamespace = "http://server/", className = "client.GetResultVisChase")
    @ResponseWrapper(localName = "getResultVisChaseResponse", targetNamespace = "http://server/", className = "client.GetResultVisChaseResponse")
    @Action(input = "http://server/MapRepairWS/getResultVisChaseRequest", output = "http://server/MapRepairWS/getResultVisChaseResponse")
    public byte[] getResultVisChase(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getResultRepair", targetNamespace = "http://server/", className = "client.GetResultRepair")
    @ResponseWrapper(localName = "getResultRepairResponse", targetNamespace = "http://server/", className = "client.GetResultRepairResponse")
    @Action(input = "http://server/MapRepairWS/getResultRepairRequest", output = "http://server/MapRepairWS/getResultRepairResponse")
    public byte[] getResultRepair(
        @WebParam(name = "arg0", targetNamespace = "")
        byte[] arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1);

}
